plugins {
    alias(libs.plugins.android.application)
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localProperties.load(new FileInputStream(localPropertiesFile))
}

// Fetch the API key (if it exists)
def chatGptApiKey = localProperties.getProperty("CHATGPT_API_KEY", "")

android {
    namespace 'com.gal.smartcalender'
    compileSdk 34
    buildFeatures {
        buildConfig true
    }

    defaultConfig {
        applicationId "com.gal.smartcalender"
        minSdk 26
        targetSdk 34
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "CHATGPT_API_KEY", "\"${chatGptApiKey}\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation libs.okhttp
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation "androidx.room:room-runtime:2.6.1" // Use the latest version available
    annotationProcessor "androidx.room:room-compiler:2.6.1" // For annotation processing
    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}